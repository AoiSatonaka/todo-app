{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Api.Todo.ToDo.Info exposing (Priority(..), Status(..), decodePriority, decodeStatus, defaultPriority, defaultStatus, encodePriority, encodeStatus, fieldNumbersPriority, fieldNumbersStatus, fromInternalPriority, fromInternalStatus, toInternalPriority, toInternalStatus)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 3.2.0
- `protoc` 4.24.4
- the following specification files: `todo.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.


@docs Priority, Status, decodePriority, decodeStatus, defaultPriority, defaultStatus, encodePriority, encodeStatus, fieldNumbersPriority
@docs fieldNumbersStatus, fromInternalPriority, fromInternalStatus, toInternalPriority, toInternalStatus
-}

import Proto.Api.Todo.Internals_
import Protobuf.Decode
import Protobuf.Encode


{-| The field numbers for the fields of `Status`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersStatus : Status -> Int
fieldNumbersStatus n_ =
    case n_ of
        STATUSUNSPECIFIED ->
            0

        STATUSNOTYET ->
            1

        STATUSDOING ->
            2

        STATUSDONE ->
            3

        StatusUnrecognized_ m_ ->
            m_


{-| Default for Status. Should only be used for 'required' decoders as an initial value.


-}
defaultStatus : Status
defaultStatus =
    STATUSUNSPECIFIED


{-| Convert a `Status` into its internal representation `Proto__Api__Todo__ToDo__Info__Status`.


Using two different types is necessary to avoid recursive module references while having readable constructor names.


-}
toInternalStatus : Status -> Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__Status
toInternalStatus data_ =
    case data_ of
        STATUSUNSPECIFIED ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__STATUSUNSPECIFIED

        STATUSNOTYET ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__STATUSNOTYET

        STATUSDOING ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__STATUSDOING

        STATUSDONE ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__STATUSDONE

        StatusUnrecognized_ n_ ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__StatusUnrecognized_ n_


{-| Convert the internal type `Proto__Api__Todo__ToDo__Info__Status` into a `Status`.


Using two different types is necessary to avoid recursive module references while having readable constructor names.


-}
fromInternalStatus : Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__Status -> Status
fromInternalStatus data_ =
    case data_ of
        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__STATUSUNSPECIFIED ->
            STATUSUNSPECIFIED

        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__STATUSNOTYET ->
            STATUSNOTYET

        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__STATUSDOING ->
            STATUSDOING

        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__STATUSDONE ->
            STATUSDONE

        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__StatusUnrecognized_ n_ ->
            StatusUnrecognized_ n_


{-| Declares how to encode a `Status` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeStatus : Status -> Protobuf.Encode.Encoder
encodeStatus =
    toInternalStatus >> Proto.Api.Todo.Internals_.encodeProto__Api__Todo__ToDo__Info__Status


{-| Declares how to decode a `Status` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeStatus : Protobuf.Decode.Decoder Status
decodeStatus =
    Protobuf.Decode.map fromInternalStatus Proto.Api.Todo.Internals_.decodeProto__Api__Todo__ToDo__Info__Status


{-| `Status` enumeration


-}
type Status
    = STATUSUNSPECIFIED
    | STATUSNOTYET
    | STATUSDOING
    | STATUSDONE
    | StatusUnrecognized_ Int


{-| The field numbers for the fields of `Priority`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersPriority : Priority -> Int
fieldNumbersPriority n_ =
    case n_ of
        PRIORITYUNSPECIFIED ->
            0

        PRIORITYLOW ->
            1

        PRIORITYNORMALMIDDLE ->
            2

        PRIORITYHIGH ->
            3

        PriorityUnrecognized_ m_ ->
            m_


{-| Default for Priority. Should only be used for 'required' decoders as an initial value.


-}
defaultPriority : Priority
defaultPriority =
    PRIORITYUNSPECIFIED


{-| Convert a `Priority` into its internal representation `Proto__Api__Todo__ToDo__Info__Priority`.


Using two different types is necessary to avoid recursive module references while having readable constructor names.


-}
toInternalPriority : Priority -> Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__Priority
toInternalPriority data_ =
    case data_ of
        PRIORITYUNSPECIFIED ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PRIORITYUNSPECIFIED

        PRIORITYLOW ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PRIORITYLOW

        PRIORITYNORMALMIDDLE ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PRIORITYNORMALMIDDLE

        PRIORITYHIGH ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PRIORITYHIGH

        PriorityUnrecognized_ n_ ->
            Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PriorityUnrecognized_ n_


{-| Convert the internal type `Proto__Api__Todo__ToDo__Info__Priority` into a `Priority`.


Using two different types is necessary to avoid recursive module references while having readable constructor names.


-}
fromInternalPriority : Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__Priority -> Priority
fromInternalPriority data_ =
    case data_ of
        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PRIORITYUNSPECIFIED ->
            PRIORITYUNSPECIFIED

        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PRIORITYLOW ->
            PRIORITYLOW

        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PRIORITYNORMALMIDDLE ->
            PRIORITYNORMALMIDDLE

        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PRIORITYHIGH ->
            PRIORITYHIGH

        Proto.Api.Todo.Internals_.Proto__Api__Todo__ToDo__Info__PriorityUnrecognized_ n_ ->
            PriorityUnrecognized_ n_


{-| Declares how to encode a `Priority` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodePriority : Priority -> Protobuf.Encode.Encoder
encodePriority =
    toInternalPriority >> Proto.Api.Todo.Internals_.encodeProto__Api__Todo__ToDo__Info__Priority


{-| Declares how to decode a `Priority` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodePriority : Protobuf.Decode.Decoder Priority
decodePriority =
    Protobuf.Decode.map fromInternalPriority Proto.Api.Todo.Internals_.decodeProto__Api__Todo__ToDo__Info__Priority


{-| `Priority` enumeration


-}
type Priority
    = PRIORITYUNSPECIFIED
    | PRIORITYLOW
    | PRIORITYNORMALMIDDLE
    | PRIORITYHIGH
    | PriorityUnrecognized_ Int
