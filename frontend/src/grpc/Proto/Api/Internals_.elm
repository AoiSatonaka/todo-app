{- !!! DO NOT EDIT THIS FILE MANUALLY !!! -}

module Proto.Api.Internals_ exposing (..)

{-| 
This file was automatically generated by
- [`protoc-gen-elm`](https://www.npmjs.com/package/protoc-gen-elm) 3.2.0
- `protoc` 4.24.4
- the following specification files: `task.proto`

To run it, add a dependency via `elm install` on [`elm-protocol-buffers`](https://package.elm-lang.org/packages/eriktim/elm-protocol-buffers/1.2.0) version latest or higher.


-}

import Maybe
import Proto.Google.Protobuf.Internals_
import Protobuf.Decode
import Protobuf.Encode


{-| The field numbers for the fields of `Proto__Api__Task__Info`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Api__Task__Info :
    { title : Int, description : Int, limit : Int, priority : Int, status : Int, labels : Int }
fieldNumbersProto__Api__Task__Info =
    { title = 1, description = 2, limit = 3, priority = 4, status = 5, labels = 6 }


{-| Default for Proto__Api__Task__Info. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Api__Task__Info : Proto__Api__Task__Info
defaultProto__Api__Task__Info =
    { title = ""
    , description = ""
    , limit = Nothing
    , priority = defaultProto__Api__Task__Info__Priority
    , status = defaultProto__Api__Task__Info__Status
    , labels = []
    }


{-| Declares how to decode a `Proto__Api__Task__Info` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Api__Task__Info : Protobuf.Decode.Decoder Proto__Api__Task__Info
decodeProto__Api__Task__Info =
    Protobuf.Decode.message
        defaultProto__Api__Task__Info
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | title = a })
        , Protobuf.Decode.optional 2 Protobuf.Decode.string (\a r -> { r | description = a })
        , Protobuf.Decode.optional
            3
            (Protobuf.Decode.map Just Proto.Google.Protobuf.Internals_.decodeProto__Google__Protobuf__Timestamp)
            (\a r -> { r | limit = a })
        , Protobuf.Decode.optional 4 decodeProto__Api__Task__Info__Priority (\a r -> { r | priority = a })
        , Protobuf.Decode.optional 5 decodeProto__Api__Task__Info__Status (\a r -> { r | status = a })
        , Protobuf.Decode.repeated 6 Protobuf.Decode.string .labels (\a r -> { r | labels = a })
        ]


{-| Declares how to encode a `Proto__Api__Task__Info` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Api__Task__Info : Proto__Api__Task__Info -> Protobuf.Encode.Encoder
encodeProto__Api__Task__Info value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.title )
        , ( 2, Protobuf.Encode.string value.description )
        , ( 3
          , (Maybe.map Proto.Google.Protobuf.Internals_.encodeProto__Google__Protobuf__Timestamp
                >> Maybe.withDefault Protobuf.Encode.none
            )
                value.limit
          )
        , ( 4, encodeProto__Api__Task__Info__Priority value.priority )
        , ( 5, encodeProto__Api__Task__Info__Status value.status )
        , ( 6, Protobuf.Encode.list Protobuf.Encode.string value.labels )
        ]


{-| `Proto__Api__Task__Info` message


-}
type alias Proto__Api__Task__Info =
    { title : String
    , description : String
    , limit : Maybe Proto.Google.Protobuf.Internals_.Proto__Google__Protobuf__Timestamp
    , priority : Proto__Api__Task__Info__Priority
    , status : Proto__Api__Task__Info__Status
    , labels : List String
    }


{-| The field numbers for the fields of `Proto__Api__Task`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Api__Task : { id : Int, info : Int }
fieldNumbersProto__Api__Task =
    { id = 1, info = 2 }


{-| Default for Proto__Api__Task. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Api__Task : Proto__Api__Task
defaultProto__Api__Task =
    { id = "", info = Nothing }


{-| Declares how to decode a `Proto__Api__Task` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Api__Task : Protobuf.Decode.Decoder Proto__Api__Task
decodeProto__Api__Task =
    Protobuf.Decode.message
        defaultProto__Api__Task
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | id = a })
        , Protobuf.Decode.optional 2 (Protobuf.Decode.map Just decodeProto__Api__Task__Info) (\a r -> { r | info = a })
        ]


{-| Declares how to encode a `Proto__Api__Task` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Api__Task : Proto__Api__Task -> Protobuf.Encode.Encoder
encodeProto__Api__Task value =
    Protobuf.Encode.message
        [ ( 1, Protobuf.Encode.string value.id )
        , ( 2, (Maybe.map encodeProto__Api__Task__Info >> Maybe.withDefault Protobuf.Encode.none) value.info )
        ]


{-| `Proto__Api__Task` message


-}
type alias Proto__Api__Task =
    { id : String, info : Maybe Proto__Api__Task__Info }


{-| The field numbers for the fields of `Proto__Api__TaskDeleteRequest`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Api__TaskDeleteRequest : { id : Int }
fieldNumbersProto__Api__TaskDeleteRequest =
    { id = 1 }


{-| Default for Proto__Api__TaskDeleteRequest. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Api__TaskDeleteRequest : Proto__Api__TaskDeleteRequest
defaultProto__Api__TaskDeleteRequest =
    { id = "" }


{-| Declares how to decode a `Proto__Api__TaskDeleteRequest` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Api__TaskDeleteRequest : Protobuf.Decode.Decoder Proto__Api__TaskDeleteRequest
decodeProto__Api__TaskDeleteRequest =
    Protobuf.Decode.message
        defaultProto__Api__TaskDeleteRequest
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | id = a }) ]


{-| Declares how to encode a `Proto__Api__TaskDeleteRequest` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Api__TaskDeleteRequest : Proto__Api__TaskDeleteRequest -> Protobuf.Encode.Encoder
encodeProto__Api__TaskDeleteRequest value =
    Protobuf.Encode.message [ ( 1, Protobuf.Encode.string value.id ) ]


{-| `Proto__Api__TaskDeleteRequest` message


-}
type alias Proto__Api__TaskDeleteRequest =
    { id : String }


{-| The field numbers for the fields of `Proto__Api__TaskAddRequest`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Api__TaskAddRequest : { info : Int }
fieldNumbersProto__Api__TaskAddRequest =
    { info = 1 }


{-| Default for Proto__Api__TaskAddRequest. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Api__TaskAddRequest : Proto__Api__TaskAddRequest
defaultProto__Api__TaskAddRequest =
    { info = Nothing }


{-| Declares how to decode a `Proto__Api__TaskAddRequest` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Api__TaskAddRequest : Protobuf.Decode.Decoder Proto__Api__TaskAddRequest
decodeProto__Api__TaskAddRequest =
    Protobuf.Decode.message
        defaultProto__Api__TaskAddRequest
        [ Protobuf.Decode.optional 1 (Protobuf.Decode.map Just decodeProto__Api__Task__Info) (\a r -> { r | info = a })
        ]


{-| Declares how to encode a `Proto__Api__TaskAddRequest` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Api__TaskAddRequest : Proto__Api__TaskAddRequest -> Protobuf.Encode.Encoder
encodeProto__Api__TaskAddRequest value =
    Protobuf.Encode.message
        [ ( 1, (Maybe.map encodeProto__Api__Task__Info >> Maybe.withDefault Protobuf.Encode.none) value.info ) ]


{-| `Proto__Api__TaskAddRequest` message


-}
type alias Proto__Api__TaskAddRequest =
    { info : Maybe Proto__Api__Task__Info }


{-| The field numbers for the fields of `Proto__Api__TaskGetRequest`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Api__TaskGetRequest : { id : Int }
fieldNumbersProto__Api__TaskGetRequest =
    { id = 1 }


{-| Default for Proto__Api__TaskGetRequest. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Api__TaskGetRequest : Proto__Api__TaskGetRequest
defaultProto__Api__TaskGetRequest =
    { id = "" }


{-| Declares how to decode a `Proto__Api__TaskGetRequest` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Api__TaskGetRequest : Protobuf.Decode.Decoder Proto__Api__TaskGetRequest
decodeProto__Api__TaskGetRequest =
    Protobuf.Decode.message
        defaultProto__Api__TaskGetRequest
        [ Protobuf.Decode.optional 1 Protobuf.Decode.string (\a r -> { r | id = a }) ]


{-| Declares how to encode a `Proto__Api__TaskGetRequest` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Api__TaskGetRequest : Proto__Api__TaskGetRequest -> Protobuf.Encode.Encoder
encodeProto__Api__TaskGetRequest value =
    Protobuf.Encode.message [ ( 1, Protobuf.Encode.string value.id ) ]


{-| `Proto__Api__TaskGetRequest` message


-}
type alias Proto__Api__TaskGetRequest =
    { id : String }


{-| The field numbers for the fields of `Proto__Api__TaskListResponse`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Api__TaskListResponse : { tasks : Int }
fieldNumbersProto__Api__TaskListResponse =
    { tasks = 1 }


{-| Default for Proto__Api__TaskListResponse. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Api__TaskListResponse : Proto__Api__TaskListResponse
defaultProto__Api__TaskListResponse =
    { tasks = [] }


{-| Declares how to decode a `Proto__Api__TaskListResponse` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Api__TaskListResponse : Protobuf.Decode.Decoder Proto__Api__TaskListResponse
decodeProto__Api__TaskListResponse =
    Protobuf.Decode.message
        defaultProto__Api__TaskListResponse
        [ Protobuf.Decode.repeated 1 decodeProto__Api__Task .tasks (\a r -> { r | tasks = a }) ]


{-| Declares how to encode a `Proto__Api__TaskListResponse` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Api__TaskListResponse : Proto__Api__TaskListResponse -> Protobuf.Encode.Encoder
encodeProto__Api__TaskListResponse value =
    Protobuf.Encode.message [ ( 1, Protobuf.Encode.list encodeProto__Api__Task value.tasks ) ]


{-| `Proto__Api__TaskListResponse` message


-}
type alias Proto__Api__TaskListResponse =
    { tasks : List Proto__Api__Task }


{-| The field numbers for the fields of `Proto__Api__TaskListRequest`. This is mostly useful for internals, like documentation generation.


-}
fieldNumbersProto__Api__TaskListRequest : {}
fieldNumbersProto__Api__TaskListRequest =
    {}


{-| Default for Proto__Api__TaskListRequest. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Api__TaskListRequest : Proto__Api__TaskListRequest
defaultProto__Api__TaskListRequest =
    {}


{-| Declares how to decode a `Proto__Api__TaskListRequest` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Api__TaskListRequest : Protobuf.Decode.Decoder Proto__Api__TaskListRequest
decodeProto__Api__TaskListRequest =
    Protobuf.Decode.message defaultProto__Api__TaskListRequest []


{-| Declares how to encode a `Proto__Api__TaskListRequest` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Api__TaskListRequest : Proto__Api__TaskListRequest -> Protobuf.Encode.Encoder
encodeProto__Api__TaskListRequest _ =
    Protobuf.Encode.message []


{-| `Proto__Api__TaskListRequest` message


-}
type alias Proto__Api__TaskListRequest =
    {}


{-| Default for Proto__Api__Task__Info__Status. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Api__Task__Info__Status : Proto__Api__Task__Info__Status
defaultProto__Api__Task__Info__Status =
    Proto__Api__Task__Info__STATUSUNSPECIFIED


{-| Declares how to encode a `Proto__Api__Task__Info__Status` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Api__Task__Info__Status : Proto__Api__Task__Info__Status -> Protobuf.Encode.Encoder
encodeProto__Api__Task__Info__Status value =
    Protobuf.Encode.int32 <|
        case value of
            Proto__Api__Task__Info__STATUSUNSPECIFIED ->
                0

            Proto__Api__Task__Info__STATUSNOTYET ->
                1

            Proto__Api__Task__Info__STATUSDOING ->
                2

            Proto__Api__Task__Info__STATUSDONE ->
                3

            Proto__Api__Task__Info__StatusUnrecognized_ i ->
                i


{-| Declares how to decode a `Proto__Api__Task__Info__Status` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Api__Task__Info__Status : Protobuf.Decode.Decoder Proto__Api__Task__Info__Status
decodeProto__Api__Task__Info__Status =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        Proto__Api__Task__Info__STATUSUNSPECIFIED

                    1 ->
                        Proto__Api__Task__Info__STATUSNOTYET

                    2 ->
                        Proto__Api__Task__Info__STATUSDOING

                    3 ->
                        Proto__Api__Task__Info__STATUSDONE

                    _ ->
                        Proto__Api__Task__Info__StatusUnrecognized_ i
            )


{-| `Proto__Api__Task__Info__Status` enumeration


-}
type Proto__Api__Task__Info__Status
    = Proto__Api__Task__Info__STATUSUNSPECIFIED
    | Proto__Api__Task__Info__STATUSNOTYET
    | Proto__Api__Task__Info__STATUSDOING
    | Proto__Api__Task__Info__STATUSDONE
    | Proto__Api__Task__Info__StatusUnrecognized_ Int


{-| Default for Proto__Api__Task__Info__Priority. Should only be used for 'required' decoders as an initial value.


-}
defaultProto__Api__Task__Info__Priority : Proto__Api__Task__Info__Priority
defaultProto__Api__Task__Info__Priority =
    Proto__Api__Task__Info__PRIORITYUNSPECIFIED


{-| Declares how to encode a `Proto__Api__Task__Info__Priority` to Bytes. To actually perform the conversion to Bytes, you need to use Protobuf.Encode.encode from eriktim/elm-protocol-buffers.


-}
encodeProto__Api__Task__Info__Priority : Proto__Api__Task__Info__Priority -> Protobuf.Encode.Encoder
encodeProto__Api__Task__Info__Priority value =
    Protobuf.Encode.int32 <|
        case value of
            Proto__Api__Task__Info__PRIORITYUNSPECIFIED ->
                0

            Proto__Api__Task__Info__PRIORITYLOW ->
                1

            Proto__Api__Task__Info__PRIORITYNORMALMIDDLE ->
                2

            Proto__Api__Task__Info__PRIORITYHIGH ->
                3

            Proto__Api__Task__Info__PriorityUnrecognized_ i ->
                i


{-| Declares how to decode a `Proto__Api__Task__Info__Priority` from Bytes. To actually perform the conversion from Bytes, you need to use Protobuf.Decode.decode from eriktim/elm-protocol-buffers.


-}
decodeProto__Api__Task__Info__Priority : Protobuf.Decode.Decoder Proto__Api__Task__Info__Priority
decodeProto__Api__Task__Info__Priority =
    Protobuf.Decode.int32
        |> Protobuf.Decode.map
            (\i ->
                case i of
                    0 ->
                        Proto__Api__Task__Info__PRIORITYUNSPECIFIED

                    1 ->
                        Proto__Api__Task__Info__PRIORITYLOW

                    2 ->
                        Proto__Api__Task__Info__PRIORITYNORMALMIDDLE

                    3 ->
                        Proto__Api__Task__Info__PRIORITYHIGH

                    _ ->
                        Proto__Api__Task__Info__PriorityUnrecognized_ i
            )


{-| `Proto__Api__Task__Info__Priority` enumeration


-}
type Proto__Api__Task__Info__Priority
    = Proto__Api__Task__Info__PRIORITYUNSPECIFIED
    | Proto__Api__Task__Info__PRIORITYLOW
    | Proto__Api__Task__Info__PRIORITYNORMALMIDDLE
    | Proto__Api__Task__Info__PRIORITYHIGH
    | Proto__Api__Task__Info__PriorityUnrecognized_ Int
